//{ Driver Code Starts
//Initial Template for Java

import java.io.*;
import java.util.*;

class GFG{
    public static void main(String args[])throws IOException
    {
        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(in.readLine());
        while(t-- > 0){
            String arr[] = in.readLine().trim().split("\\s+");
            int n = Integer.parseInt(arr[0]);
            int m = Integer.parseInt(arr[1]);
            int mat[][] = new int[n][m];
            for(int i = 0;i < n;i++){
                String a[] = in.readLine().trim().split("\\s+");
                for(int j = 0;j < m;j++)
                    mat[i][j] = Integer.parseInt(a[j]);
            }
            int q = Integer.parseInt(in.readLine());
            int queries[][] = new int[q][3];
            for(int i = 0;i < q;i++){
                String a1[] = in.readLine().trim().split("\\s+");
                for(int j = 0;j < 3;j++)
                    queries[i][j] = Integer.parseInt(a1[j]);
            }
            Solution ob = new Solution();
            List<Integer> ans = new ArrayList<Integer>();
            ans = ob.matrixSum(n, m, mat, q, queries);
            for(int i = 0;i < q;i++)
                System.out.println(ans.get(i));
        
System.out.println("~");
}
    }
}
// } Driver Code Ends


//User function Template for Java


class Solution{
    static List<Integer> matrixSum(int n, int m, int mat[][], int q, int queries[][])
    {
        // code here
        ArrayList<Integer> list=new ArrayList<>();
        for(int y=0;y<q;y++){
            int val=queries[y][0];
            int i=queries[y][1];
            int j=queries[y][2];
            int count=0;
        	for(int x=j-val;x<=j+val;x++){
            	if(i-val>=0 && i-val<n && x>=0 && x<m){
                	count+=(mat[i-val][x]);
            	}
        	}
        	for(int x=i-val+1;x<=i+val;x++){
            	if(j+val>=0 && j+val<m && x>=0 && x<n){
                	count+=(mat[x][j+val]);
            	}
        	}
        	for(int x=j-val;x<=j+val-1;x++){
            	if(i+val>=0 && i+val<n && x>=0 && x<m){
                	count+=(mat[i+val][x]);
            	}
        	}
        	for(int x=i-val+1;x<=i+val-1;x++){
            	if(j-val>=0 && j-val<m &&  x>=0  && x<n){
                	count+=(mat[x][j-val]);
            	}
        	}
        	list.add(count);
        }
        return list;
    }
}
