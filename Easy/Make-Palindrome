//{ Driver Code Starts
import java.io.*;
import java.util.*;


class StringArray
{
    public static String[] input(BufferedReader br, int n) throws IOException
    {
        String[] s = br.readLine().trim().split(" ");
        return s;
    }

    public static void print(String[] a)
    {
        for(String e : a)
            System.out.print(e + " ");
        System.out.println();
    }

    public static void print(ArrayList<String> a)
    {
        for(String e : a)
            System.out.print(e + " ");
        System.out.println();
    }
}

class GFG {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int t;
        t = Integer.parseInt(br.readLine());
        while(t-- > 0){
            
            int n;
            n = Integer.parseInt(br.readLine());
            
            
            String[] arr = StringArray.input(br, n);
            
            Solution obj = new Solution();
            boolean res = obj.makePalindrome(n, arr);
            
            String _result_val = (res) ? "YES" : "NO";
            System.out.println(_result_val);
        
System.out.println("~");
}
    }
}

// } Driver Code Ends


class Solution {
    public static boolean makePalindrome(int n, String[] arr) {
        // code here
        HashMap<String,Integer> map=new HashMap<>();
        for(String s:arr){
            StringBuilder sb=new StringBuilder();
            sb.append(s);
            String st=sb.reverse().toString();
            if(map.containsKey(st)){
                map.remove(st);
            }else{
                map.put(s,map.getOrDefault(s,0)+1);
            }
        }
        int val=map.size();
        if(val==0){
            return true;
        }else if(val==1){
            String s="";
            for(String st:map.keySet()){
                s=st;
            }
            StringBuilder sb=new StringBuilder();
            sb.append(s);
            if(s.equals(sb.reverse().toString())){
                return true;
            }
        }
        return false;
    }
}
