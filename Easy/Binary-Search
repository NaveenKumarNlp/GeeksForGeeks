//{ Driver Code Starts
// Initial Template for Java

import java.io.*;
import java.util.*;

public class GFG {
    public static void main(String[] args) throws IOException {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        sc.nextLine(); // consume the newline
        while (t-- > 0) {
            int k = sc.nextInt();
            sc.nextLine(); // consume the newline
            String input = sc.nextLine();
            String[] strNumbers = input.split(" ");
            int[] arr = new int[strNumbers.length];
            for (int i = 0; i < strNumbers.length; i++) {
                arr[i] = Integer.parseInt(strNumbers[i]);
            }
            Solution ob = new Solution();
            int res = ob.binarysearch(arr, k);
            System.out.println(res);
        }
        sc.close();
    }
}

// } Driver Code Ends


// User function Template for Java

class Solution {
    public int binarysearch(int[] arr, int k) {
        // Code Here
        return binary(arr,k, 0, arr.length-1);

    }
     public static int binary(int[] arr, int k, int left, int right) {
        if (left > right) {
            return -1; // Element is not found
        }
        
        int mid = left + (right - left) / 2; // To avoid overflow
        
        if (arr[mid] == k) {
            return mid;
        } else if (arr[mid] > k) {
            return binary(arr, k, left, mid - 1); // Search in the left half
        } else {
            return binary(arr, k, mid + 1, right); // Search in the right half
        }
    }
}
